{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { CHECK_IF_SIGNED_IN_QUERY } from '../components/CheckIfSignedIn';\nimport { CHECK_IF_ADMIN_QUERY } from '../components/CheckIfAdmin';\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    cache: cache,\n    uri: process.env.NODE_ENV === 'development' ? process.env.DEV_ENDPOINT : process.env.PROD_ENDPOINT,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    resolvers: {\n      Query: {},\n      Mutation: {}\n    }\n  });\n  return client;\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/jordanrendall/DevProjects/rowing.jordanrendall.com/frontend/utils/withData.js"],"names":["withApollo","ApolloClient","InMemoryCache","CHECK_IF_SIGNED_IN_QUERY","CHECK_IF_ADMIN_QUERY","createClient","headers","cache","client","uri","process","env","NODE_ENV","DEV_ENDPOINT","PROD_ENDPOINT","request","operation","setContext","fetchOptions","credentials","resolvers","Query","Mutation"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,4BAArC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,MAAMC,KAAK,GAAG,IAAIL,aAAJ,EAAd;AAEA,MAAMM,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BM,IAAAA,KAAK,EAALA,KAD8B;AAE9BE,IAAAA,GAAG,EACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIF,OAAO,CAACC,GAAR,CAAYE,YADhB,GAEIH,OAAO,CAACC,GAAR,CAAYG,aALY;AAM9BC,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBb,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KAb6B;AAe9Bc,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD;AAfmB,GAAjB,CAAf;AAqBA,SAAOd,MAAP;AACD;;AAED,eAAeR,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { CHECK_IF_SIGNED_IN_QUERY } from '../components/CheckIfSignedIn';\nimport { CHECK_IF_ADMIN_QUERY } from '../components/CheckIfAdmin';\n\nfunction createClient({ headers }) {\n  const cache = new InMemoryCache();\n\n  const client = new ApolloClient({\n    cache,\n    uri:\n      process.env.NODE_ENV === 'development'\n        ? process.env.DEV_ENDPOINT\n        : process.env.PROD_ENDPOINT,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n\n    resolvers: {\n      Query: {},\n      Mutation: {},\n    },\n  });\n\n  return client;\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}